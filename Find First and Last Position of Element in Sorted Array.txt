Question Link :-  https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/


class Solution {
    public int[] searchRange(int[] nums, int target) {
        
        int[] ans = {-1, -1};
        
        ans[0] = searchIndex(nums, target, true);
        if(ans[0] != -1) {
            ans[1] = searchIndex(nums, target, false);
        }
        
        return ans;
        
    }
    
    int searchIndex(int[] arr, int target, boolean isLeftSide) {
        int start = 0, end = arr.length - 1;
        int ans = -1;
        while(start <= end) {
            int mid = start + (end - start) / 2;
            
            if(target > arr[mid]) {
                start = mid + 1;
            }
            else if(target < arr[mid]) {
                end = mid - 1;
            }
            else {
                ans = mid;
                if(isLeftSide) {
                    end = mid - 1;
                }
                else {
                    start = mid + 1;
                }
            }
        }
        
        return ans;
    }
}
